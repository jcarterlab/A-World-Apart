library(rtweet)
lookup_users(1435709653963493381)
users_data(1435709653963493381)
search_users(1435709653963493381)
as_screenname(1435709653963493381)
tweets_with_users(1435709653963493376)
get_timeline(1435709653963493376)
get_timeline(1437152725435830275)
lookup_tweets(1437152725435830275)
lookup_users(1437152725435830275)
tweets_data(1437152725435830275)
as_userid(1437152725435830275)
get_followers(1437152725435830275)
get_followers(1435709653963493381)
get_followers(1078039942088085514)
lookup_users(1078039942088085514)
users_data(1078039942088085514)
tweets_data(1078039942088085514)
tweets_data("1078039942088085514")
get_timeline(BarackObama)
get_timeline("BarackObama")
lookup_users(1078039942088085514)
lookup_users('1078039942088085514')
lookup_users('1437152725435830275')
test <- lookup_users('1437152725435830275')
test$screen_name
test <- lookup_users('1435709653963493381')
test$screen_name
test <- lookup_users('1435559517652140038')
test$screen_name
test <- lookup_users('1570524994555322371')
test$screen_name
test <- lookup_users('910680625065091072')
test$screen_name
test <- lookup_users('1582247134816092161')
test$screen_name
test <- lookup_users('1533375771502596097')
test$screen_name
test <- lookup_users('1582103091637256214')
test$screen_name
test <- lookup_users('1582239725406011398')
test$screen_name
# calculates roughly how long it will take to download all of the data.
total_followers <- 300000*2
rate_limit <- 75*10^3
wait_time <- 15
print(paste0("It will take roughly ",
round(((total_followers/rate_limit)*wait_time)/60, 1),
" hours to download all the data."))
library(dplyr)
library(tidyverse)
library(jsonlite)
library(writexl)
library(rtweet)
# target accounts.
tories <- ""
labour <- ""
# creates an object for the parties.
parties <- c(tories, labour)
# retrieves the target account's followers.
get_followers <- function(target_account) {
followers <- rtweet::get_followers(user = target_account,
n = 300000,
retryonratelimit = TRUE) %>%
mutate(account = target_account)
return(followers)
}
# retrieves a data frame of multiple account's followers.
get_multiple_followers <- function(target_accounts) {
list <- list()
for(i in 1:length(target_accounts)) {
list[[i]] <- get_followers(target_accounts[i])
}
return(rbind_pages(list))
}
# calculates roughly how long it will take to download all of the data.
total_followers <- 300000*2
rate_limit <- 75*10^3
wait_time <- 15
print(paste0("It will take roughly ",
round(((total_followers/rate_limit)*wait_time)/60, 1),
" hours to download all the data."))
# binds the results to a single data frame.
df <- get_multiple_followers(parties)
# saves as a csv file.
write_xlsx(df, "C:/Users/HUAWEI/Desktop/Projects/A-World-Apart/Data/party_followers_uk.xlsx")
library(dplyr)
library(tidyverse)
library(jsonlite)
library(writexl)
library(rtweet)
# target accounts.
tories <- "@Conservatives"
labour <- "@UKLabour"
# creates an object for the parties.
parties <- c(tories, labour)
# retrieves the target account's followers.
get_followers <- function(target_account) {
followers <- rtweet::get_followers(user = target_account,
n = 300000,
retryonratelimit = TRUE) %>%
mutate(account = target_account)
return(followers)
}
# retrieves a data frame of multiple account's followers.
get_multiple_followers <- function(target_accounts) {
list <- list()
for(i in 1:length(target_accounts)) {
list[[i]] <- get_followers(target_accounts[i])
}
return(rbind_pages(list))
}
# calculates roughly how long it will take to download all of the data.
total_followers <- 300000*2
rate_limit <- 75*10^3
wait_time <- 15
print(paste0("It will take roughly ",
round(((total_followers/rate_limit)*wait_time)/60, 1),
" hours to download all the data."))
# binds the results to a single data frame.
df <- get_multiple_followers(parties)
# saves as a csv file.
write_xlsx(df, "C:/Users/HUAWEI/Desktop/Projects/A-World-Apart/Data/party_followers_uk.xlsx")
